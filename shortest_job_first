#include <stdio.h>
#include <stdlib.h>

struct Proc {
    int a;
    int b;
    int w;
};

int comp(const void *x, const void *y) {
    return ((struct Proc *)x)->b - ((struct Proc *)y)->b;
}

int main() {
    int n, i, j;
    float avg_w = 0, avg_t = 0;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    struct Proc p[n];
    for (i = 0; i < n; i++) {
        printf("Enter arrival time and burst time of process %d: ", i + 1);
        scanf("%d %d", &p[i].a, &p[i].b);
    }
    qsort(p, n, sizeof(struct Proc), comp);
    p[0].w = 0;
    for (i = 1; i < n; i++) {
        p[i].w = 0;
        for (j = 0; j < i; j++) {
            p[i].w += p[j].b;
        }
        avg_w += p[i].w;
    }
    avg_w /= n;
    for (i = 0; i < n; i++) {
        avg_t += p[i].b + p[i].w;
    }
    avg_t /= n;
    printf("\nProc\tArrival\tBurst\tWaiting\tTurnaround\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\n", i + 1, p[i].a, p[i].b, p[i].w, p[i].b + p[i].w);
    }
    printf("\nAvg Waiting Time: %f\n", avg_w);
    printf("Avg Turnaround Time: %f\n", avg_t);
    return 0;
}
